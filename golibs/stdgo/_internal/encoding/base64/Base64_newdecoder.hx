package stdgo._internal.encoding.base64;
import stdgo._internal.encoding.binary.Binary;
import stdgo._internal.io.Io;
import stdgo._internal.strconv.Strconv;
function newDecoder(_enc:stdgo.Ref<stdgo._internal.encoding.base64.Base64_encoding.Encoding>, _r:stdgo._internal.io.Io_reader.Reader):stdgo._internal.io.Io_reader.Reader {
        //"file:///Users/o/.go/go1.21.3/src/encoding/base64/base64.go#L618"
        return stdgo.Go.asInterface((stdgo.Go.setRef(({ _enc : _enc, _r : stdgo.Go.asInterface((stdgo.Go.setRef((new stdgo._internal.encoding.base64.Base64_t_newlinefilteringreader.T_newlineFilteringReader(_r) : stdgo._internal.encoding.base64.Base64_t_newlinefilteringreader.T_newlineFilteringReader), stdgo._internal.internal.reflect.GoType.refType({ get : () -> _internal.gotype.Gotype___type__stdgodot_internaldotencodingdotbase64dotbase64_t_newlinefilteringreaderdott_newlinefilteringreader.__type__stdgodot_internaldotencodingdotbase64dotBase64_t_newlinefilteringreaderdotT_newlineFilteringReader })) : stdgo.Ref<stdgo._internal.encoding.base64.Base64_t_newlinefilteringreader.T_newlineFilteringReader>), stdgo._internal.internal.reflect.GoType.refType({ get : () -> _internal.gotype.Gotype___type__stdgodot_internaldotencodingdotbase64dotbase64_t_newlinefilteringreaderdott_newlinefilteringreader.__type__stdgodot_internaldotencodingdotbase64dotBase64_t_newlinefilteringreaderdotT_newlineFilteringReader })) } : stdgo._internal.encoding.base64.Base64_t_decoder.T_decoder), stdgo._internal.internal.reflect.GoType.refType({ get : () -> _internal.gotype.Gotype___type__stdgodot_internaldotencodingdotbase64dotbase64_t_decoderdott_decoder.__type__stdgodot_internaldotencodingdotbase64dotBase64_t_decoderdotT_decoder })) : stdgo.Ref<stdgo._internal.encoding.base64.Base64_t_decoder.T_decoder>), stdgo._internal.internal.reflect.GoType.refType({ get : () -> _internal.gotype.Gotype___type__stdgodot_internaldotencodingdotbase64dotbase64_t_decoderdott_decoder.__type__stdgodot_internaldotencodingdotbase64dotBase64_t_decoderdotT_decoder }));
    }

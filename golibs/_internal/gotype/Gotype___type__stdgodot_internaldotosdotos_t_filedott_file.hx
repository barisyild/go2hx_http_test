package _internal.gotype;
@:noCompletion var __type__stdgodot_internaldotosdotOs_t_filedotT_file = stdgo._internal.internal.reflect.GoType.named("stdgo._internal.os.Os_t_file.T_file", [new stdgo._internal.internal.reflect.MethodType("_close", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [] }, { get : () -> [_internal.gotype.Gotype___type__stdgodoterror.__type__stdgodotError] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType })], stdgo._internal.internal.reflect.GoType.structType([{ name : "_pfd", embedded : false, tag : "", type : { get : () -> _internal.gotype.Gotype___type__stdgodot_internaldotinternaldotpolldotpoll_fddotfd.__type__stdgodot_internaldotinternaldotpolldotPoll_fddotFD }, optional : false }, { name : "_name", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(string_kind) }, optional : false }, { name : "_dirinfo", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.refType({ get : () -> _internal.gotype.Gotype___type__stdgodot_internaldotosdotos_t_dirinfodott_dirinfo.__type__stdgodot_internaldotosdotOs_t_dirinfodotT_dirInfo }) }, optional : false }, { name : "_nonblock", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(bool_kind) }, optional : false }, { name : "_stdoutOrErr", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(bool_kind) }, optional : false }, { name : "_appendMode", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(bool_kind) }, optional : false }]), false, { get : () -> null });

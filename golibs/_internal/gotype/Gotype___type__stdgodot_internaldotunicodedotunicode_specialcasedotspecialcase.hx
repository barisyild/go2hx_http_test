package _internal.gotype;
@:noCompletion var __type__stdgodot_internaldotunicodedotUnicode_specialcasedotSpecialCase = stdgo._internal.internal.reflect.GoType.named("stdgo._internal.unicode.Unicode_specialcase.SpecialCase", [new stdgo._internal.internal.reflect.MethodType("toLower", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [stdgo._internal.internal.reflect.GoType.basic(int32_kind)] }, { get : () -> [stdgo._internal.internal.reflect.GoType.basic(int32_kind)] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }), new stdgo._internal.internal.reflect.MethodType("toTitle", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [stdgo._internal.internal.reflect.GoType.basic(int32_kind)] }, { get : () -> [stdgo._internal.internal.reflect.GoType.basic(int32_kind)] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }), new stdgo._internal.internal.reflect.MethodType("toUpper", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [stdgo._internal.internal.reflect.GoType.basic(int32_kind)] }, { get : () -> [stdgo._internal.internal.reflect.GoType.basic(int32_kind)] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType })], stdgo._internal.internal.reflect.GoType.sliceType({ get : () -> _internal.gotype.Gotype___type__stdgodot_internaldotunicodedotunicode_caserangedotcaserange.__type__stdgodot_internaldotunicodedotUnicode_caserangedotCaseRange }), false, { get : () -> null });

package _internal.gotype;
@:noCompletion var __type__stdgodot_internaldotnetdothttpdotHttp_t_http2randomwriteschedulerdotT_http2randomWriteScheduler = stdgo._internal.internal.reflect.GoType.named("stdgo._internal.net.http.Http_t_http2randomwritescheduler.T_http2randomWriteScheduler", [new stdgo._internal.internal.reflect.MethodType("adjustStream", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [stdgo._internal.internal.reflect.GoType.basic(uint32_kind), _internal.gotype.Gotype___type__stdgodot_internaldotnetdothttpdothttp_t_http2priorityparamdott_http2priorityparam.__type__stdgodot_internaldotnetdothttpdotHttp_t_http2priorityparamdotT_http2PriorityParam] }, { get : () -> [] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }), new stdgo._internal.internal.reflect.MethodType("closeStream", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [stdgo._internal.internal.reflect.GoType.basic(uint32_kind)] }, { get : () -> [] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }), new stdgo._internal.internal.reflect.MethodType("openStream", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [stdgo._internal.internal.reflect.GoType.basic(uint32_kind), _internal.gotype.Gotype___type__stdgodot_internaldotnetdothttpdothttp_t_http2openstreamoptionsdott_http2openstreamoptions.__type__stdgodot_internaldotnetdothttpdotHttp_t_http2openstreamoptionsdotT_http2OpenStreamOptions] }, { get : () -> [] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }), new stdgo._internal.internal.reflect.MethodType("pop", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [] }, { get : () -> [_internal.gotype.Gotype___type__stdgodot_internaldotnetdothttpdothttp_t_http2framewriterequestdott_http2framewriterequest.__type__stdgodot_internaldotnetdothttpdotHttp_t_http2framewriterequestdotT_http2FrameWriteRequest, stdgo._internal.internal.reflect.GoType.basic(bool_kind)] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }), new stdgo._internal.internal.reflect.MethodType("push", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [_internal.gotype.Gotype___type__stdgodot_internaldotnetdothttpdothttp_t_http2framewriterequestdott_http2framewriterequest.__type__stdgodot_internaldotnetdothttpdotHttp_t_http2framewriterequestdotT_http2FrameWriteRequest] }, { get : () -> [] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType })], stdgo._internal.internal.reflect.GoType.structType([{ name : "_zero", embedded : false, tag : "", type : { get : () -> _internal.gotype.Gotype___type__stdgodot_internaldotnetdothttpdothttp_t_http2writequeuedott_http2writequeue.__type__stdgodot_internaldotnetdothttpdotHttp_t_http2writequeuedotT_http2writeQueue }, optional : false }, { name : "_sq", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.mapType({ get : () -> stdgo._internal.internal.reflect.GoType.basic(uint32_kind) }, { get : () -> stdgo._internal.internal.reflect.GoType.refType({ get : () -> _internal.gotype.Gotype___type__stdgodot_internaldotnetdothttpdothttp_t_http2writequeuedott_http2writequeue.__type__stdgodot_internaldotnetdothttpdotHttp_t_http2writequeuedotT_http2writeQueue }) }) }, optional : false }, { name : "_queuePool", embedded : false, tag : "", type : { get : () -> _internal.gotype.Gotype___type__stdgodot_internaldotnetdothttpdothttp_t_http2writequeuepooldott_http2writequeuepool.__type__stdgodot_internaldotnetdothttpdotHttp_t_http2writequeuepooldotT_http2writeQueuePool }, optional : false }]), false, { get : () -> null });

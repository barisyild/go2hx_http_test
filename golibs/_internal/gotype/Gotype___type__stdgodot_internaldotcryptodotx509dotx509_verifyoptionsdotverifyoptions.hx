package _internal.gotype;
@:noCompletion var __type__stdgodot_internaldotcryptodotx509dotX509_verifyoptionsdotVerifyOptions = stdgo._internal.internal.reflect.GoType.named("stdgo._internal.crypto.x509.X509_verifyoptions.VerifyOptions", [], stdgo._internal.internal.reflect.GoType.structType([{ name : "dNSName", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(string_kind) }, optional : false }, { name : "intermediates", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.refType({ get : () -> _internal.gotype.Gotype___type__stdgodot_internaldotcryptodotx509dotx509_certpooldotcertpool.__type__stdgodot_internaldotcryptodotx509dotX509_certpooldotCertPool }) }, optional : false }, { name : "roots", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.refType({ get : () -> _internal.gotype.Gotype___type__stdgodot_internaldotcryptodotx509dotx509_certpooldotcertpool.__type__stdgodot_internaldotcryptodotx509dotX509_certpooldotCertPool }) }, optional : false }, { name : "currentTime", embedded : false, tag : "", type : { get : () -> _internal.gotype.Gotype___type__stdgodot_internaldottimedottime_timedottime.__type__stdgodot_internaldottimedotTime_timedotTime }, optional : false }, { name : "keyUsages", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.sliceType({ get : () -> _internal.gotype.Gotype___type__stdgodot_internaldotcryptodotx509dotx509_extkeyusagedotextkeyusage.__type__stdgodot_internaldotcryptodotx509dotX509_extkeyusagedotExtKeyUsage }) }, optional : false }, { name : "maxConstraintComparisions", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(int_kind) }, optional : false }]), false, { get : () -> null });

package _internal.gotype;
@:noCompletion var __type__stdgodot_internaldottestingdotTesting_t_benchcontextdotT_benchContext = stdgo._internal.internal.reflect.GoType.named("stdgo._internal.testing.Testing_t_benchcontext.T_benchContext", [new stdgo._internal.internal.reflect.MethodType("_processBench", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [stdgo._internal.internal.reflect.GoType.refType({ get : () -> _internal.gotype.Gotype___type__stdgodot_internaldottestingdottesting_bdotb.__type__stdgodot_internaldottestingdotTesting_bdotB })] }, { get : () -> [] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType })], stdgo._internal.internal.reflect.GoType.structType([{ name : "_match", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.refType({ get : () -> _internal.gotype.Gotype___type__stdgodot_internaldottestingdottesting_t_matcherdott_matcher.__type__stdgodot_internaldottestingdotTesting_t_matcherdotT_matcher }) }, optional : false }, { name : "_maxLen", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(int_kind) }, optional : false }, { name : "_extLen", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(int_kind) }, optional : false }]), false, { get : () -> null });

package _internal.gotype;
@:noCompletion var __type__stdgodot_internaldotstringsdotStrings_t_stringfinderdotT_stringFinder = stdgo._internal.internal.reflect.GoType.named("stdgo._internal.strings.Strings_t_stringfinder.T_stringFinder", [new stdgo._internal.internal.reflect.MethodType("_next", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [stdgo._internal.internal.reflect.GoType.basic(string_kind)] }, { get : () -> [stdgo._internal.internal.reflect.GoType.basic(int_kind)] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType })], stdgo._internal.internal.reflect.GoType.structType([{ name : "_pattern", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(string_kind) }, optional : false }, { name : "_badCharSkip", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.arrayType({ get : () -> stdgo._internal.internal.reflect.GoType.basic(int_kind) }, 256) }, optional : false }, { name : "_goodSuffixSkip", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.sliceType({ get : () -> stdgo._internal.internal.reflect.GoType.basic(int_kind) }) }, optional : false }]), false, { get : () -> null });

package _internal.gotype;
@:noCompletion var __type__stdgodot_internaldotruntimedotpprofdotPprof_t_memmapdotT_memMap = stdgo._internal.internal.reflect.GoType.named("stdgo._internal.runtime.pprof.Pprof_t_memmap.T_memMap", [], stdgo._internal.internal.reflect.GoType.structType([{ name : "_start", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(uintptr_kind) }, optional : false }, { name : "_end", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(uintptr_kind) }, optional : false }, { name : "_offset", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(uint64_kind) }, optional : false }, { name : "_file", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(string_kind) }, optional : false }, { name : "_buildID", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(string_kind) }, optional : false }, { name : "_funcs", embedded : false, tag : "", type : { get : () -> _internal.gotype.Gotype___type__stdgodot_internaldotruntimedotpprofdotpprof_t_symbolizeflagdott_symbolizeflag.__type__stdgodot_internaldotruntimedotpprofdotPprof_t_symbolizeflagdotT_symbolizeFlag }, optional : false }, { name : "_fake", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(bool_kind) }, optional : false }]), false, { get : () -> null });

package _internal.gotype;
@:noCompletion var __type___internaldotreflect_testdotReflect_test_t_privatedotT_private = stdgo._internal.internal.reflect.GoType.named("_internal.reflect_test.Reflect_test_t_private.T_private", [new stdgo._internal.internal.reflect.MethodType("p", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [] }, { get : () -> [] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType })], stdgo._internal.internal.reflect.GoType.structType([{ name : "z", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(int_kind) }, optional : false }, { name : "_z", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(int_kind) }, optional : false }, { name : "s", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(string_kind) }, optional : false }, { name : "a", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.arrayType({ get : () -> _internal.gotype.Gotype___type___internaldotreflect_testdotreflect_test_privatedotprivate.__type___internaldotreflect_testdotReflect_test_privatedotPrivate }, 1) }, optional : false }, { name : "t", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.sliceType({ get : () -> _internal.gotype.Gotype___type___internaldotreflect_testdotreflect_test_privatedotprivate.__type___internaldotreflect_testdotReflect_test_privatedotPrivate }) }, optional : false }]), false, { get : () -> null });

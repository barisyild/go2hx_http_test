package _internal.gotype;
@:noCompletion var __type___internaldotgithubdotcomdotdlclarkdotregexp2dotsyntaxdotSyntax_errordotError = stdgo._internal.internal.reflect.GoType.named("_internal.githubdotcom.dlclark.regexp2.syntax.Syntax_error.Error", [new stdgo._internal.internal.reflect.MethodType("error", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [] }, { get : () -> [stdgo._internal.internal.reflect.GoType.basic(string_kind)] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType })], stdgo._internal.internal.reflect.GoType.structType([{ name : "code", embedded : false, tag : "", type : { get : () -> _internal.gotype.Gotype___type___internaldotgithubdotcomdotdlclarkdotregexp2dotsyntaxdotsyntax_errorcodedoterrorcode.__type___internaldotgithubdotcomdotdlclarkdotregexp2dotsyntaxdotSyntax_errorcodedotErrorCode }, optional : false }, { name : "expr", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(string_kind) }, optional : false }, { name : "args", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.sliceType({ get : () -> stdgo._internal.internal.reflect.GoType.interfaceType(true, []) }) }, optional : false }]), false, { get : () -> null });

package _internal.gotype;
@:noCompletion var __type__stdgodot_internaldotruntimedotpprofdotPprof_t_profmapentrydotT_profMapEntry = stdgo._internal.internal.reflect.GoType.named("stdgo._internal.runtime.pprof.Pprof_t_profmapentry.T_profMapEntry", [], stdgo._internal.internal.reflect.GoType.structType([{ name : "_nextHash", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.refType({ get : () -> _internal.gotype.Gotype___type__stdgodot_internaldotruntimedotpprofdotpprof_t_profmapentrydott_profmapentry.__type__stdgodot_internaldotruntimedotpprofdotPprof_t_profmapentrydotT_profMapEntry }) }, optional : false }, { name : "_nextAll", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.refType({ get : () -> _internal.gotype.Gotype___type__stdgodot_internaldotruntimedotpprofdotpprof_t_profmapentrydott_profmapentry.__type__stdgodot_internaldotruntimedotpprofdotPprof_t_profmapentrydotT_profMapEntry }) }, optional : false }, { name : "_stk", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.sliceType({ get : () -> stdgo._internal.internal.reflect.GoType.basic(uintptr_kind) }) }, optional : false }, { name : "_tag", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(unsafepointer_kind) }, optional : false }, { name : "_count", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(int64_kind) }, optional : false }]), false, { get : () -> null });

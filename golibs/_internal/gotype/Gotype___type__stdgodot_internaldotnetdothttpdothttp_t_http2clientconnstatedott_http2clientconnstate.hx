package _internal.gotype;
@:noCompletion var __type__stdgodot_internaldotnetdothttpdotHttp_t_http2clientconnstatedotT_http2ClientConnState = stdgo._internal.internal.reflect.GoType.named("stdgo._internal.net.http.Http_t_http2clientconnstate.T_http2ClientConnState", [], stdgo._internal.internal.reflect.GoType.structType([{ name : "closed", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(bool_kind) }, optional : false }, { name : "closing", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(bool_kind) }, optional : false }, { name : "streamsActive", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(int_kind) }, optional : false }, { name : "streamsReserved", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(int_kind) }, optional : false }, { name : "streamsPending", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(int_kind) }, optional : false }, { name : "maxConcurrentStreams", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(uint32_kind) }, optional : false }, { name : "lastIdle", embedded : false, tag : "", type : { get : () -> _internal.gotype.Gotype___type__stdgodot_internaldottimedottime_timedottime.__type__stdgodot_internaldottimedotTime_timedotTime }, optional : false }]), false, { get : () -> null });

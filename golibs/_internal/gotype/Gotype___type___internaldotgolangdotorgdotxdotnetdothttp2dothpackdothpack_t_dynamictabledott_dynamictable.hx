package _internal.gotype;
@:noCompletion var __type___internaldotgolangdotorgdotxdotnetdothttp2dothpackdotHpack_t_dynamictabledotT_dynamicTable = stdgo._internal.internal.reflect.GoType.named("_internal.golangdotorg.x.net.http2.hpack.Hpack_t_dynamictable.T_dynamicTable", [new stdgo._internal.internal.reflect.MethodType("_add", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [_internal.gotype.Gotype___type___internaldotgolangdotorgdotxdotnetdothttp2dothpackdothpack_headerfielddotheaderfield.__type___internaldotgolangdotorgdotxdotnetdothttp2dothpackdotHpack_headerfielddotHeaderField] }, { get : () -> [] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }), new stdgo._internal.internal.reflect.MethodType("_evict", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [] }, { get : () -> [] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }), new stdgo._internal.internal.reflect.MethodType("_setMaxSize", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [stdgo._internal.internal.reflect.GoType.basic(uint32_kind)] }, { get : () -> [] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType })], stdgo._internal.internal.reflect.GoType.structType([{ name : "_table", embedded : false, tag : "", type : { get : () -> _internal.gotype.Gotype___type___internaldotgolangdotorgdotxdotnetdothttp2dothpackdothpack_t_headerfieldtabledott_headerfieldtable.__type___internaldotgolangdotorgdotxdotnetdothttp2dothpackdotHpack_t_headerfieldtabledotT_headerFieldTable }, optional : false }, { name : "_size", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(uint32_kind) }, optional : false }, { name : "_maxSize", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(uint32_kind) }, optional : false }, { name : "_allowedMaxSize", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(uint32_kind) }, optional : false }]), false, { get : () -> null });

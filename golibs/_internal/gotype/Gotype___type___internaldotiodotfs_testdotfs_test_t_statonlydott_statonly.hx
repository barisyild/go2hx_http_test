package _internal.gotype;
@:noCompletion var __type___internaldotiodotfs_testdotFs_test_t_statonlydotT_statOnly = stdgo._internal.internal.reflect.GoType.named("_internal.io.fs_test.Fs_test_t_statonly.T_statOnly", [new stdgo._internal.internal.reflect.MethodType("open", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [stdgo._internal.internal.reflect.GoType.basic(string_kind)] }, { get : () -> [_internal.gotype.Gotype___type__stdgodot_internaldotiodotfsdotfs_filedotfile.__type__stdgodot_internaldotiodotfsdotFs_filedotFile, _internal.gotype.Gotype___type__stdgodoterror.__type__stdgodotError] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }), new stdgo._internal.internal.reflect.MethodType("stat", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [stdgo._internal.internal.reflect.GoType.basic(string_kind)] }, { get : () -> [_internal.gotype.Gotype___type__stdgodot_internaldotiodotfsdotfs_fileinfodotfileinfo.__type__stdgodot_internaldotiodotfsdotFs_fileinfodotFileInfo, _internal.gotype.Gotype___type__stdgodoterror.__type__stdgodotError] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType })], stdgo._internal.internal.reflect.GoType.structType([{ name : "statFS", embedded : true, tag : "", type : { get : () -> _internal.gotype.Gotype___type__stdgodot_internaldotiodotfsdotfs_statfsdotstatfs.__type__stdgodot_internaldotiodotfsdotFs_statfsdotStatFS }, optional : false }]), false, { get : () -> null });

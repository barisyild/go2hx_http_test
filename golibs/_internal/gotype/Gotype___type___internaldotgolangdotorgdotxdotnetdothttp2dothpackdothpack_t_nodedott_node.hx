package _internal.gotype;
@:noCompletion var __type___internaldotgolangdotorgdotxdotnetdothttp2dothpackdotHpack_t_nodedotT_node = stdgo._internal.internal.reflect.GoType.named("_internal.golangdotorg.x.net.http2.hpack.Hpack_t_node.T_node", [], stdgo._internal.internal.reflect.GoType.structType([{ name : "__0", embedded : false, tag : "", type : { get : () -> _internal.gotype.Gotype___type___internaldotgolangdotorgdotxdotnetdothttp2dothpackdothpack_t_incomparabledott_incomparable.__type___internaldotgolangdotorgdotxdotnetdothttp2dothpackdotHpack_t_incomparabledotT_incomparable }, optional : false }, { name : "_children", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.refType({ get : () -> stdgo._internal.internal.reflect.GoType.arrayType({ get : () -> stdgo._internal.internal.reflect.GoType.refType({ get : () -> _internal.gotype.Gotype___type___internaldotgolangdotorgdotxdotnetdothttp2dothpackdothpack_t_nodedott_node.__type___internaldotgolangdotorgdotxdotnetdothttp2dothpackdotHpack_t_nodedotT_node }) }, 256) }) }, optional : false }, { name : "_codeLen", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(uint8_kind) }, optional : false }, { name : "_sym", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(uint8_kind) }, optional : false }]), false, { get : () -> null });

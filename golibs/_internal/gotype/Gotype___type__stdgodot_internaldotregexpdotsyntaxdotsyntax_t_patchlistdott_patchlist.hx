package _internal.gotype;
@:noCompletion var __type__stdgodot_internaldotregexpdotsyntaxdotSyntax_t_patchlistdotT_patchList = stdgo._internal.internal.reflect.GoType.named("stdgo._internal.regexp.syntax.Syntax_t_patchlist.T_patchList", [new stdgo._internal.internal.reflect.MethodType("_append", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [stdgo._internal.internal.reflect.GoType.refType({ get : () -> _internal.gotype.Gotype___type__stdgodot_internaldotregexpdotsyntaxdotsyntax_progdotprog.__type__stdgodot_internaldotregexpdotsyntaxdotSyntax_progdotProg }), _internal.gotype.Gotype___type__stdgodot_internaldotregexpdotsyntaxdotsyntax_t_patchlistdott_patchlist.__type__stdgodot_internaldotregexpdotsyntaxdotSyntax_t_patchlistdotT_patchList] }, { get : () -> [_internal.gotype.Gotype___type__stdgodot_internaldotregexpdotsyntaxdotsyntax_t_patchlistdott_patchlist.__type__stdgodot_internaldotregexpdotsyntaxdotSyntax_t_patchlistdotT_patchList] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }), new stdgo._internal.internal.reflect.MethodType("_patch", { get : () -> stdgo._internal.internal.reflect.GoType.signature(false, { get : () -> [stdgo._internal.internal.reflect.GoType.refType({ get : () -> _internal.gotype.Gotype___type__stdgodot_internaldotregexpdotsyntaxdotsyntax_progdotprog.__type__stdgodot_internaldotregexpdotsyntaxdotSyntax_progdotProg }), stdgo._internal.internal.reflect.GoType.basic(uint32_kind)] }, { get : () -> [] }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType }) }, { get : () -> stdgo._internal.internal.reflect.GoType.invalidType })], stdgo._internal.internal.reflect.GoType.structType([{ name : "_head", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(uint32_kind) }, optional : false }, { name : "_tail", embedded : false, tag : "", type : { get : () -> stdgo._internal.internal.reflect.GoType.basic(uint32_kind) }, optional : false }]), false, { get : () -> null });

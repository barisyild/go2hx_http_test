package _internal.bytes_test;
var _containsTests : stdgo.Slice<_internal.bytes_test.Bytes_test_t__struct_158.T__struct_158> = (new stdgo.Slice<_internal.bytes_test.Bytes_test_t__struct_158.T__struct_158>(4, 4, ...[({ _b : ((("hello" : stdgo.GoString) : stdgo.GoString) : stdgo.Slice<stdgo.GoUInt8>), _subslice : ((("hel" : stdgo.GoString) : stdgo.GoString) : stdgo.Slice<stdgo.GoUInt8>), _want : true } : _internal.bytes_test.Bytes_test_t__struct_158.T__struct_158), ({ _b : ((("日本語" : stdgo.GoString) : stdgo.GoString) : stdgo.Slice<stdgo.GoUInt8>), _subslice : ((("日本" : stdgo.GoString) : stdgo.GoString) : stdgo.Slice<stdgo.GoUInt8>), _want : true } : _internal.bytes_test.Bytes_test_t__struct_158.T__struct_158), ({ _b : ((("hello" : stdgo.GoString) : stdgo.GoString) : stdgo.Slice<stdgo.GoUInt8>), _subslice : ((("Hello, world" : stdgo.GoString) : stdgo.GoString) : stdgo.Slice<stdgo.GoUInt8>), _want : false } : _internal.bytes_test.Bytes_test_t__struct_158.T__struct_158), ({ _b : ((("東京" : stdgo.GoString) : stdgo.GoString) : stdgo.Slice<stdgo.GoUInt8>), _subslice : ((("京東" : stdgo.GoString) : stdgo.GoString) : stdgo.Slice<stdgo.GoUInt8>), _want : false } : _internal.bytes_test.Bytes_test_t__struct_158.T__struct_158)].concat([for (i in 4 ... (4 > 4 ? 4 : 4 : stdgo.GoInt).toBasic()) ({ _b : (null : stdgo.Slice<stdgo.GoUInt8>), _subslice : (null : stdgo.Slice<stdgo.GoUInt8>), _want : false } : _internal.bytes_test.Bytes_test_t__struct_158.T__struct_158)])) : stdgo.Slice<_internal.bytes_test.Bytes_test_t__struct_158.T__struct_158>);

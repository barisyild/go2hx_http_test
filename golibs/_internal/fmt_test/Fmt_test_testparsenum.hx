package _internal.fmt_test;
function testParsenum(_t:stdgo.Ref<stdgo._internal.testing.Testing_t_.T_>):Void {
        var _testCases = (new stdgo.Slice<_internal.fmt_test.Fmt_test_t__struct_46.T__struct_46>(6, 6, ...[({ _s : ("a123" : stdgo.GoString), _start : (0 : stdgo.GoInt), _end : (4 : stdgo.GoInt), _num : (0 : stdgo.GoInt), _isnum : false, _newi : (0 : stdgo.GoInt) } : _internal.fmt_test.Fmt_test_t__struct_46.T__struct_46), ({ _s : ("1234" : stdgo.GoString), _start : (1 : stdgo.GoInt), _end : (1 : stdgo.GoInt), _num : (0 : stdgo.GoInt), _isnum : false, _newi : (1 : stdgo.GoInt) } : _internal.fmt_test.Fmt_test_t__struct_46.T__struct_46), ({ _s : ("123a" : stdgo.GoString), _start : (0 : stdgo.GoInt), _end : (4 : stdgo.GoInt), _num : (123 : stdgo.GoInt), _isnum : true, _newi : (3 : stdgo.GoInt) } : _internal.fmt_test.Fmt_test_t__struct_46.T__struct_46), ({ _s : ("12a3" : stdgo.GoString), _start : (0 : stdgo.GoInt), _end : (4 : stdgo.GoInt), _num : (12 : stdgo.GoInt), _isnum : true, _newi : (2 : stdgo.GoInt) } : _internal.fmt_test.Fmt_test_t__struct_46.T__struct_46), ({ _s : ("1234" : stdgo.GoString), _start : (0 : stdgo.GoInt), _end : (4 : stdgo.GoInt), _num : (1234 : stdgo.GoInt), _isnum : true, _newi : (4 : stdgo.GoInt) } : _internal.fmt_test.Fmt_test_t__struct_46.T__struct_46), ({ _s : ("1a234" : stdgo.GoString), _start : (1 : stdgo.GoInt), _end : (3 : stdgo.GoInt), _num : (0 : stdgo.GoInt), _isnum : false, _newi : (1 : stdgo.GoInt) } : _internal.fmt_test.Fmt_test_t__struct_46.T__struct_46)].concat([for (i in 6 ... (6 > 6 ? 6 : 6 : stdgo.GoInt).toBasic()) ({ _s : ("" : stdgo.GoString), _start : (0 : stdgo.GoInt), _end : (0 : stdgo.GoInt), _num : (0 : stdgo.GoInt), _isnum : false, _newi : (0 : stdgo.GoInt) } : _internal.fmt_test.Fmt_test_t__struct_46.T__struct_46)])) : stdgo.Slice<_internal.fmt_test.Fmt_test_t__struct_46.T__struct_46>);
        //"file:///Users/o/.go/go1.21.3/src/fmt/fmt_test.go#L1898"
        if (_testCases != null) for (__2 => _tt in _testCases) {
            var __tmp__ = stdgo._internal.fmt.Fmt_parsenum.parsenum(_tt._s?.__copy__(), _tt._start, _tt._end), _num:stdgo.GoInt = __tmp__._0, _isnum:Bool = __tmp__._1, _newi:stdgo.GoInt = __tmp__._2;
            //"file:///Users/o/.go/go1.21.3/src/fmt/fmt_test.go#L1900"
            if (((_num != (_tt._num) || _isnum != (_tt._isnum) : Bool) || (_newi != _tt._newi) : Bool)) {
                //"file:///Users/o/.go/go1.21.3/src/fmt/fmt_test.go#L1901"
                _t.errorf(("parsenum(%q, %d, %d) = %d, %v, %d, want %d, %v, %d" : stdgo.GoString), new stdgo.AnyInterface(_tt._s, new stdgo._internal.internal.reflect.Reflect._Type(stdgo._internal.internal.reflect.GoType.basic(string_kind))), new stdgo.AnyInterface(_tt._start, new stdgo._internal.internal.reflect.Reflect._Type(stdgo._internal.internal.reflect.GoType.basic(int_kind))), new stdgo.AnyInterface(_tt._end, new stdgo._internal.internal.reflect.Reflect._Type(stdgo._internal.internal.reflect.GoType.basic(int_kind))), new stdgo.AnyInterface(_num, new stdgo._internal.internal.reflect.Reflect._Type(stdgo._internal.internal.reflect.GoType.basic(int_kind))), new stdgo.AnyInterface(_isnum, new stdgo._internal.internal.reflect.Reflect._Type(stdgo._internal.internal.reflect.GoType.basic(bool_kind))), new stdgo.AnyInterface(_newi, new stdgo._internal.internal.reflect.Reflect._Type(stdgo._internal.internal.reflect.GoType.basic(int_kind))), new stdgo.AnyInterface(_tt._num, new stdgo._internal.internal.reflect.Reflect._Type(stdgo._internal.internal.reflect.GoType.basic(int_kind))), new stdgo.AnyInterface(_tt._isnum, new stdgo._internal.internal.reflect.Reflect._Type(stdgo._internal.internal.reflect.GoType.basic(bool_kind))), new stdgo.AnyInterface(_tt._newi, new stdgo._internal.internal.reflect.Reflect._Type(stdgo._internal.internal.reflect.GoType.basic(int_kind))));
            };
        };
    }
